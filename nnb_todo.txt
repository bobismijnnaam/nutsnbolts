----------------
-- Short term --
----------------

+ Testing!
	+ Especially game state machine, lol
+ Change all file description dates to YYYY-MM-DD. Done at some places but not
all.
+ Something that allows resolution-independent development
	+ Likely together with ECS?
+ Debug facilities for standard structures (sdl_point, vector, etc)
+ ECS
+ Make nnb::Text support multiline. Should work always (if people want to
disable it, s/\\n//g
+ Custom cursor sdl wrapper
	+ nnb::CursorManager
	+ nnb::Image will be used for this
	+ It will have the following functions
		+ setSystemCursor(type)
			+ type should be an enum for all system cursors
			+ see SDL_CreateSystemCursor()
			+ should also have a reset value
			+ default value should be reset
		+ loadCursor(filename, channel)
			+ An image will be loaded
			+ For each pixel, if the given channel is above 128,
			the pixel is opaque. Otherwise transparent.
			+ transparancy is taken into account.
			+ Obviously jpegs are 128% opaque
		+ loadCursor(nnb::Image, channel)
			+ same as above, except an already existing
+ Change the subsystem class to NNBContext. Can also be used to store
g_window, g_renderer, etc?
	+ Global g_nnb var supplied 
	+ window (SDL_Window)
	+ windowSurface (SDL_Surface)
	+ renderer (SDL_Renderer)
	+ gm (nnb::GameStateManager)
	+ tm (nnb::TextureManager)
	+ cm (nnb::CursorManager)
	+ if font subsystem is initialzed, an fm (nnb::FontManager)
	+ if sound subsystem is initialized, an sm (nnb::SoundManager)
	+ GL initializement
	+ [] operator for getting variables
		+ backed by json
		+ ex: g_nnb["scrW"].int() should return an int
+ StateMachine
	+ Some default transitions, and some default loading screens
+ Make CMake gobble up all the headers 'n stuff
+ A thing to handle fragment/vertex shaders
+ SoundManager! Also in context
+ Change math stuff into glm classes?
+ Think about some common containers
	+ Conversion from/to SDL/GLM equivalents?
+ Use assert() more often!
+ Replace all uses of std::endl with \n. Blasphemy!
+ More toString()/operator<<() methods!
+ Unit tests for color (clamp et al?)
+ NNB_UNPACK unit tests!
+ Integrate THE image class
	+ In nnb::Image, implement more wrapper modes.
	+ Replace pointers (e.g. the ptr in pasteImage) with references
+ Unit tests for exist, getFiles, etc.

---------------
-- Long term --
---------------

+ Own freetype api
+ Thread safe random facilities
