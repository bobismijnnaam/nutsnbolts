+ nog een keer naar gamestate kijken
	+ niet wat te omslachtig?
	+ id's versimpelen
	+ exit() command toevoegen (alias voor SET met EXIT state)
	+ font manager
	+ smart texture
+ expand logging to trace, debug, warning, error lvls
+ make state/gamestate distinction less hacky
	+ fixed/variable timestep variations
	+ configurable (??)
+ Font manager
	+ Alleen aangeven waar font staat, als iemand font request wordt ie geladen op die grootte, daarna gecached
+ Texture manager
	+ Heeft een manager class nodig
	+ PersistentTexture die positie en shit behoudt
	+ manager class is optioneel en managed met string keys de textures. textures zitten in groepen en kunnen per groep of individueel geladen worden.
	+ groepen worden vertegenwoordigt door de map waar de textures instaan. bijv: texture map is media/textures, en dan heb je de groepen intro, game, lvlSelect, en dus mappen media/textures/intro, media/textures/game, media/textures/lvlSelect.
+ Text class uit Stormnado halen
	+ Compatible maken met de nieuwe fontmanager & PersistentTexture
	+ PersistentText
+ Subsystem class. Initializes sdl and ttf and such, and deinitializes them.

Hoe rare crash te onderzoeken:
wordt gedeconstruct in omgekeerde volgorde. Dus in elke destructor een log plaatsen, kijken waar hij stopt en vanuit daar verder
